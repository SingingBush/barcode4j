name: Maven

on:
  workflow_dispatch:
  push:
  pull_request:
    branches:
      - main

jobs:

  build:
    name: Test with Java ${{ matrix.jdk }}
    runs-on: ubuntu-22.04
    permissions:
      pull-requests: write
    strategy:
      fail-fast: false
      matrix:
        jdk: ['8', '11', '17', '21']

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK ${{ matrix.jdk }}
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: ${{ matrix.jdk }}
        cache: 'maven'

    - name: Maven Verify
      run: mvn -B verify --file pom.xml

    # - name: Maven Site (for reports)
    #   run: mvn install site

    - name: Add coverage to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.6.1
      with:
        paths: |
          # ${{ github.workspace }}/**/build/reports/jacoco/prodNormalDebugCoverage/prodNormalDebugCoverage.xml,
          # ${{ github.workspace }}/**/build/reports/jacoco/**/debugCoverage.xml,
          ${{ github.workspace }}/**/target/surefire-reports/TEST-*.xml
          ${{ github.workspace }}/aggregate-report/target/site/jacoco-aggregate/jacoco.xml
        token: ${{ secrets.GITHUB_TOKEN }}
        min-coverage-overall: 40
        min-coverage-changed-files: 60
        update-comment: true

#  deploy:
#    name: Deploy Artifact
#    needs: build
#    continue-on-error: true
#    if: ${{ needs.build.result == 'success' && github.ref == 'refs/heads/main' }}
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Set up JDK 8
#        uses: actions/setup-java@v4
#        with:
#          distribution: temurin
#          java-version: 8
#          cache: maven
#          #server-id: github
#          server-id: ossrh
#          server-username: MAVEN_USERNAME
#          server-password: MAVEN_PASSWORD
#          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
#          gpg-passphrase: MAVEN_GPG_PASSPHRASE # env variable for GPG private key passphrase

#      - name: Maven Deploy (GitHub Packages)
#        run: mvn deploy -Prelease,githubPackages -DskipTests=true
#        with:
#          server-id: github
#        env:
#          GITHUB_TOKEN: ${{ github.token }}

#      - name: Maven Deploy (Maven Central)
#        run: mvn deploy -Prelease -DskipTests=true
#        env:
#          MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
#          MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
#          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}
