<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE document PUBLIC "-//APACHE//DTD Documentation V1.1//EN" "document-v11.dtd">
<document>
  <header>
    <title>PDF417</title>
  </header>
  <body>
    <p>also known as: ISO/IEC 15438:2001(E)</p>
    <section id="example">
      <title>Example</title>
      <figure src="../images/example-pdf417.png" alt="Example PDF417 symbol"/>
    </section>
    <section id="structure">
      <title>Structure</title>
      <p>The configuration for the default implementation is:</p>
      <source>&#60;barcode&#62;
  &#60;<strong>pdf417</strong>&#62;
      &#60;module-width&#62;{<link href="barcode-xml.html#length">length</link>:0.352777mm}&#60;/module-width&#62; &#60;!-- 1 pixel at 72dpi --&#62;
      &#60;row-height&#62;{<link href="barcode-xml.html#length">length</link>:3mw}&#60;/row-height&#62;
      &#60;columns&#62;{<link href="barcode-xml.html#number">number</link>:2}&#60;/columns&#62;
      &#60;min-columns&#62;{<link href="barcode-xml.html#number">number</link>:2}&#60;/min-columns&#62;
      &#60;max-columns&#62;{<link href="barcode-xml.html#number">number</link>:2}&#60;/max-columns&#62;
      &#60;min-rows&#62;{<link href="barcode-xml.html#number">number</link>:3}&#60;/min-rows&#62;
      &#60;max-rows&#62;{<link href="barcode-xml.html#number">number</link>:90}&#60;/max-rows&#62;
      &#60;ec-level&#62;{<link href="barcode-xml.html#number">number</link>:0}&#60;/ec-level&#62;
      &#60;quiet-zone enabled="{<link href="barcode-xml.html#boolean">boolean</link>:true}"&#62;{<link href="barcode-xml.html#length">length</link>:2mw}&#60;/quiet-zone&#62;
      &#60;vertical-quiet-zone&#62;{<link href="barcode-xml.html#length">length</link>:default is same as quiet-zone}&#60;/vertical-quiet-zone&#62;
      &#60;width-to-height-ratio&#62;{<link href="barcode-xml.html#number">number</link>:3.0}&#60;/width-to-height-ratio&#62;
      &#60;encoding enable-eci="{<link href="barcode-xml.html#boolean">boolean</link>:false}"&#62;{<link href="barcode-xml.html#string">string</link>:cp437}&#60;/encoding&#62;
  &#60;/<strong>pdf417</strong>&#62;
&#60;/barcode&#62;</source>
    </section>
    <section>
      <title>Notes</title>
      <ul>
        <li>This symbology has no human-readable part!</li>
        <li>"ec-level" is the error correction level and must be between 0 and 8.</li>
        <li>If "vertical-quiet-zone" is not set explicitely, it is the same as the horizontal quiet zone.</li>
        <li>Depending on the size of the message, "columns" and "ec-level" may need to be adjusted. Read possible error messages carefully.</li>
        <li>
          Alternatively, you can remove the "columns" setting and work with "min/max-columns" 
          and "min/max-rows" which allows the symbol to grow and shrink depending on the message.
          Using the "width-to-height-ratio" you can control the shape of the symbol.
          (Note: the valid number of rows must be between 3 and 90, the valid number of columns
          between 1 and 30)
        </li>
        <li>
          Using the "columns" setting overrides the "min/max-columns" setting! Or in other words:
          Setting "columns" sets "min-columns" and "max-columns" to the same value.
        </li>
        <li>
          Using "encoding", you can control how the message is encoded in terms of character
          set. PDF417's default character set is "cp437" (PC437) as per ISO-15438:2001. By setting
          this value, you can deviate from the default using all possible encodings supported by
          Java. This is a non-standard operation unless you also set "enable-eci" to "true" in
          which case the codewords to indicate a particular ECI are inserted at the beginning.
          Conforming readers can then properly interpret the data. However, it appears that ECI is
          often not implemented by barcode readers.
        </li>
        <li>Macro PDF417 functionality is not implemented, yet.</li>
        <li>Compact PDF417 functionality is not implemented, yet.</li>
        <li>
          This implementation relies on
          <a href="http://www.iso.org/iso/iso_catalogue/catalogue_ics/catalogue_detail_ics.htm?csnumber=27681">ISO/IEC 15438:2001(E)</a>.
          It is currently unknown if changes introduced by
          <a href="http://www.iso.org/iso/iso_catalogue/catalogue_tc/catalogue_detail.htm?csnumber=43816">ISO/IEC 15438:2006</a>
          have an influence on this implementation.
        </li>
      </ul>
    </section>
    <section>
      <title>Message format</title>
      <ul>
        <li>All printable ASCII characters are valid characters.</li>
        <li>Byte compaction mode permits all 256 possible 8-bit byte values to be encoded.</li>
        <li>Using only numeric characters allows for smaller symbol sizes.</li>
        <li>
          Currently, ECI functionality is limited to setting the character set for the whole
          message without the possibility to add custom ECIs or changing the character set inside
          the message.
        </li>
        <li>
          Binary data can be supplied through URLs if they are enclosed in "url()".
          <a href="http://www.faqs.org/rfcs/rfc2397.html">RFC 2397</a> data URLs can be used to
          encode inline data.
          An example to encode the text "~Test~": <code>url(data:;base64,flRlc3R+)</code> or
          <code>url(data:text/plain;charset=iso-8859-1,%7ETest%7E)</code>
          (the "charset="iso-8859-1" is important to get characters above the 7bit US-ASCII set
          correctly!).
          <a href="http://xmlgraphics.apache.org/commons/">Apache XML Graphics Commons</a> has a 
          <a href="http://svn.apache.org/viewvc/xmlgraphics/commons/trunk/src/java/org/apache/xmlgraphics/util/uri/DataURLUtil.java?view=markup">DataURLUtil</a>
          class that allows you to easily convert binary data to a data URL.
        </li>
      </ul>
    </section>
  </body>
</document>

